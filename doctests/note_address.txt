>>> from dsn.s_expr.note_address import NoteAddress, TheChild, InScore, SExprELS18NoteAddress, ELS18RenderingAddress
>>> from dsn.s_expr.clef_address import play_simple_score, score_with_global_address
>>> from dsn.s_expr.clef import BecomeList, Insert, Extend, Chord, Score as CScore
>>> from dsn.s_expr.score import Score
>>>
>>> score = Score.from_list([
...             BecomeList(),
...             Chord(CScore([
...                 Insert(0, BecomeList()),
...                 Extend(0, Insert(0, BecomeList())),
...             ])),
...             ])
>>>
>>> score_wga = score_with_global_address(score)
>>>
>>> score_wga.notes()[0].address
(@0)
>>> score_wga.notes()[1].address
(@1)
>>> score_wga.notes()[1].score.notes[0].address
(@1, @0)
>>> score_wga.notes()[1].score.notes[1].address
(@1, @1)
>>> score_wga.notes()[1].score.notes[1].child_note.address
(@1, @1, >)

>>> tree_wga = play_simple_score(score_wga)

>>> tree_wga.score.last_note().address
(@1)

>>> tree_wga.children[0].children[0].score.last_note().address
(@1, @1, >, >)


## SExprELS18NoteAddress

The below tests for SExprELS18NoteAddress are specific to the method `is_prefix_of`.

>>> item_3_at_root = SExprELS18NoteAddress(NoteAddress((InScore(3),)))
>>> a_child_of_item_2_at_root = SExprELS18NoteAddress(NoteAddress((InScore(2), TheChild(),)))
>>> a_child_of_item_3_at_root = SExprELS18NoteAddress(NoteAddress((InScore(3), TheChild(),)))
>>> index_field_of_item_3_at_root = SExprELS18NoteAddress(NoteAddress((InScore(3),)), 'index')

>>> a_chord_at_4 = SExprELS18NoteAddress(NoteAddress((InScore(4),)))
>>> the_list_of_the_chord = SExprELS18NoteAddress(NoteAddress((InScore(4),)), 'list')
>>> the_name_of_the_chord = SExprELS18NoteAddress(NoteAddress((InScore(4),)), 'name')
>>> item_3_in_list = SExprELS18NoteAddress(NoteAddress((InScore(4), InScore(3))))

>>> item_3_at_root.is_prefix_of(a_child_of_item_2_at_root)
False

>>> item_3_at_root.is_prefix_of(a_child_of_item_3_at_root)
True

>>> item_3_at_root.is_prefix_of(index_field_of_item_3_at_root)
True

>>> a_chord_at_4.is_prefix_of(the_name_of_the_chord)
True

>>> a_chord_at_4.is_prefix_of(the_list_of_the_chord)
True

# Special case: 'list'
>>> the_list_of_the_chord.is_prefix_of(item_3_in_list)
True

>>> the_name_of_the_chord.is_prefix_of(item_3_in_list)
False

>>> the_list_of_the_chord.is_prefix_of(the_name_of_the_chord)
False

>>> the_name_of_the_chord.is_prefix_of(the_list_of_the_chord)
False
